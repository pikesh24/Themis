/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Voting, VotingInterface } from "../Voting";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "candidateCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidates",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
    ],
    name: "getCandidate",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180604001604052806040518060400160405280600d81526020017f4a6f686e20416e646572736f6e0000000000000000000000000000000000000081525081526020016000815250600080600260008154809291906100b390610252565b91905055815260200190815260200160002060008201518160000190816100da91906104e0565b506020820151816001015590505060405180604001604052806040518060400160405280600e81526020017f53617261682057696c6c69616d73000000000000000000000000000000000000815250815260200160008152506000806002600081548092919061014990610252565b919050558152602001908152602001600020600082015181600001908161017091906104e0565b506020820151816001015590505060405180604001604052806040518060400160405280600f81526020017f4d69636861656c204a6f686e736f6e000000000000000000000000000000000081525081526020016000815250600080600260008154809291906101df90610252565b919050558152602001908152602001600020600082015181600001908161020691906104e0565b50602082015181600101559050506105b2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061025d82610248565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361028f5761028e610219565b5b600182019050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061031b57607f821691505b60208210810361032e5761032d6102d4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026103967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610359565b6103a08683610359565b95508019841693508086168417925050509392505050565b6000819050919050565b60006103dd6103d86103d384610248565b6103b8565b610248565b9050919050565b6000819050919050565b6103f7836103c2565b61040b610403826103e4565b848454610366565b825550505050565b600090565b610420610413565b61042b8184846103ee565b505050565b5b8181101561044f57610444600082610418565b600181019050610431565b5050565b601f8211156104945761046581610334565b61046e84610349565b8101602085101561047d578190505b61049161048985610349565b830182610430565b50505b505050565b600082821c905092915050565b60006104b760001984600802610499565b1980831691505092915050565b60006104d083836104a6565b9150826002028217905092915050565b6104e98261029a565b67ffffffffffffffff811115610502576105016102a5565b5b61050c8254610303565b610517828285610453565b600060209050601f83116001811461054a5760008415610538578287015190505b61054285826104c4565b8655506105aa565b601f19841661055886610334565b60005b828110156105805784890151825560018201915060208501945060208101905061055b565b8683101561059d5784890151610599601f8916826104a6565b8355505b6001600288020188555050505b505050505050565b610927806105c16000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630121b93f1461006757806309eef43e146100835780633477ee2e146100b357806335b8e820146100e45780638da5cb5b14610115578063a9a981a314610133575b600080fd5b610081600480360381019061007c919061050c565b610151565b005b61009d60048036038101906100989190610597565b6102c0565b6040516100aa91906105df565b60405180910390f35b6100cd60048036038101906100c8919061050c565b6102e0565b6040516100db929190610699565b60405180910390f35b6100fe60048036038101906100f9919061050c565b61038c565b60405161010c929190610699565b60405180910390f35b61011d6104a5565b60405161012a91906106d8565b60405180910390f35b61013b6104cb565b60405161014891906106f3565b60405180910390f35b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d59061075a565b60405180910390fd5b6000811180156101f057506002548111155b61022f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610226906107c6565b60405180910390fd5b60008060018361023f9190610815565b8152602001908152602001600020600101600081548092919061026190610849565b919050555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60016020528060005260406000206000915054906101000a900460ff1681565b6000602052806000526040600020600091509050806000018054610303906108c0565b80601f016020809104026020016040519081016040528092919081815260200182805461032f906108c0565b801561037c5780601f106103515761010080835404028352916020019161037c565b820191906000526020600020905b81548152906001019060200180831161035f57829003601f168201915b5050505050908060010154905082565b6060600060025483106103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb906107c6565b60405180910390fd5b6000806000858152602001908152602001600020604051806040016040529081600082018054610403906108c0565b80601f016020809104026020016040519081016040528092919081815260200182805461042f906108c0565b801561047c5780601f106104515761010080835404028352916020019161047c565b820191906000526020600020905b81548152906001019060200180831161045f57829003601f168201915b505050505081526020016001820154815250509050806000015181602001519250925050915091565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080fd5b6000819050919050565b6104e9816104d6565b81146104f457600080fd5b50565b600081359050610506816104e0565b92915050565b600060208284031215610522576105216104d1565b5b6000610530848285016104f7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061056482610539565b9050919050565b61057481610559565b811461057f57600080fd5b50565b6000813590506105918161056b565b92915050565b6000602082840312156105ad576105ac6104d1565b5b60006105bb84828501610582565b91505092915050565b60008115159050919050565b6105d9816105c4565b82525050565b60006020820190506105f460008301846105d0565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610634578082015181840152602081019050610619565b60008484015250505050565b6000601f19601f8301169050919050565b600061065c826105fa565b6106668185610605565b9350610676818560208601610616565b61067f81610640565b840191505092915050565b610693816104d6565b82525050565b600060408201905081810360008301526106b38185610651565b90506106c2602083018461068a565b9392505050565b6106d281610559565b82525050565b60006020820190506106ed60008301846106c9565b92915050565b6000602082019050610708600083018461068a565b92915050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000610744600d83610605565b915061074f8261070e565b602082019050919050565b6000602082019050818103600083015261077381610737565b9050919050565b7f496e76616c69642063616e646964617465000000000000000000000000000000600082015250565b60006107b0601183610605565b91506107bb8261077a565b602082019050919050565b600060208201905081810360008301526107df816107a3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610820826104d6565b915061082b836104d6565b9250828203905081811115610843576108426107e6565b5b92915050565b6000610854826104d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610886576108856107e6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108d857607f821691505b6020821081036108eb576108ea610891565b5b5091905056fea26469706673582212202cec5ce968841cd946563f87818c146e88eb967b4b7409ac31412e576359439a64736f6c634300081c0033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Voting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Voting__factory {
    return super.connect(runner) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new Interface(_abi) as VotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Voting {
    return new Contract(address, _abi, runner) as unknown as Voting;
  }
}
